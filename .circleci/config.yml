# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-test:  
    # These next lines define a docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to upate the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: dotnet/sdk:latest
        auth:
          username: $DOCKERHUB_USERNAME  # can specify string literal values
          password: $DOCKERHUB_PASSWORD  # or project environment variable reference
    steps:
      # Checkout the code as the first step.
      - checkout
      - run:
          # Update this line with the directory that contains your tests project file
          name: Run tests
          command: |
           ls
      # Then simply use the dotnet container as you'd expect and run your tests
      - run:
          # Update this line with the directory that contains your tests project file
          name: Run tests
          command: |
            dotnet test
      - run:
          # Update this line with the directory that contains your tests project file
          name: Build code
          command: |
            dotnet build
            

workflows:
  # Below is the definition of your workflow.
  # Inside the workflow, you provide the jobs you want to run, e.g this workflow runs the build-and-test job above.
  # CircleCI will run this workflow on every commit.
  # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
  main: 
    jobs:
      - build-and-test
        
